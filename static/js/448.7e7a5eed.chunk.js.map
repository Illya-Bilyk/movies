{"version":3,"file":"static/js/448.7e7a5eed.chunk.js","mappings":"gPAEaA,EAASC,EAAAA,GAAAA,IAAH,+DAINC,EAASD,EAAAA,GAAAA,IAAH,6EAINE,EAAkBF,EAAAA,GAAAA,IAAH,8CAGfG,EAAiBH,EAAAA,GAAAA,IAAH,2D,SCJdI,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzBC,EAA+CF,EAA/CE,YAAaC,EAAkCH,EAAlCG,aAAcC,EAAoBJ,EAApBI,MAAOC,EAAaL,EAAbK,SACpCC,EAAcN,EAAMO,OAAOC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IACnCC,EAAcC,KAAKC,MAAqB,GAAfV,GAE/B,OACE,iCACE,UAACP,EAAD,YACE,0BACE,SAACF,EAAD,CAAQoB,IAAKC,EAAAA,GAAgBb,EAAac,IAAI,cAEhD,UAACnB,EAAD,YACE,wBAAKO,KACL,wCAAgBO,EAAhB,QACA,uCACA,uBAAIN,KACJ,oCAECC,EAAYE,KAAI,SAAAS,GAAK,OACpB,wBAAiBA,GAARA,EADW,WAK1B,UAACnB,EAAD,YACE,mDACA,0BACE,2BACE,yBACE,SAAC,KAAD,CAAMoB,GAAG,OAAOC,MAAO,CAAEC,KAAMnB,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMiB,GAAG,UAAUC,MAAO,CAAEC,KAAMnB,GAAlC,iCASb,E,SChDYoB,GAAW1B,EAAAA,EAAAA,IAAO2B,EAAAA,GAAP3B,CAAH,2gCC0BrB,EAvBqB,WAAO,IAAD,IACnB4B,GAASC,EAAAA,EAAAA,MACf,GAA0BC,EAAAA,EAAAA,YAA1B,eAAOzB,EAAP,KAAc0B,EAAd,KAEMC,EAAU,qBADCC,EAAAA,EAAAA,MACWT,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAU3C,OARAS,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGACyBd,EAAAA,GAAiBQ,EAAOO,SADjD,OACQC,EADR,OAEEL,EAASK,GAFX,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACT,EAAOO,WAGT,iCACE,SAACT,EAAD,CAAUH,GAAIS,EAAd,uBACC3B,IAAS,SAACD,EAAD,CAAWC,MAAOA,EAAOC,SAAU0B,KAC7C,SAAC,KAAD,MAGL,C","sources":["pages/MovieDetails/MovieCard.styled.jsx","pages/MovieDetails/MovieCard.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Poster = styled.img`\n  width: 300px;\n  margin-left: 40px;\n`;\nexport const Wraper = styled.div`\n  display: flex;\n  border-bottom: solid 2px black;\n`;\nexport const DescriptionWrap = styled.div`\n  margin-left: 20px;\n`;\nexport const AdditionalWrap = styled.div`\n  border-bottom: solid 2px black;\n`;\n","import * as API from '../../services/api';\nimport { Link } from 'react-router-dom';\nimport {\n  Wraper,\n  Poster,\n  DescriptionWrap,\n  AdditionalWrap,\n} from './MovieCard.styled';\n\nexport const MovieCard = ({ movie, location }) => {\n  const { poster_path, vote_average, title, overview } = movie;\n  const namedGenres = movie.genres.map(genr => genr.name);\n  const movieRating = Math.floor(vote_average * 10);\n\n  return (\n    <>\n      <Wraper>\n        <div>\n          <Poster src={API.IMAGE_URL + poster_path} alt=\"poster\" />\n        </div>\n        <DescriptionWrap>\n          <h2>{title}</h2>\n          <p>User score: {movieRating}%</p>\n          <b>Overview :</b>\n          <p>{overview}</p>\n          <b>Genres :</b>\n\n          {namedGenres.map(genre => (\n            <li key={genre}>{genre}</li>\n          ))}\n        </DescriptionWrap>\n      </Wraper>\n      <AdditionalWrap>\n        <b>Additional information</b>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"cast\" state={{ from: location }}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from: location }}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      </AdditionalWrap>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const LinkItem = styled(Link)`\n  appearance: none;\n  background-color: #000000;\n  border: 2px solid #1a1a1a;\n  border-radius: 15px;\n  box-sizing: border-box;\n  color: #ffffff;\n  cursor: pointer;\n  display: inline-block;\n  font-family: Roobert, -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica,\n    Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n  font-size: 16px;\n  font-weight: 600;\n  line-height: normal;\n  margin: 0;\n  min-height: 20px;\n  min-width: 0;\n  outline: none;\n  padding: 5px 10px;\n  text-align: center;\n  text-decoration: none;\n  transition: all 300ms cubic-bezier(0.23, 1, 0.32, 1);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  width: 100px;\n  will-change: transform;\n\n  margin: 10px 0 10px 40px;\n\n  &:disabled {\n    pointer-events: none;\n  }\n\n  &:hover {\n    box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;\n    transform: translateY(-2px);\n  }\n\n  &:active {\n    box-shadow: none;\n    transform: translateY(0);\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { MovieCard } from './MovieCard';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport * as API from '../../services/api';\nimport { LinkItem } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const params = useParams();\n  const [movie, setMovie] = useState();\n  const location = useLocation();\n  const goBackLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function getMovieById() {\n      const response = await API.getMovieById(params.movieId);\n      setMovie(response);\n    }\n    getMovieById();\n  }, [params.movieId]);\n\n  return (\n    <>\n      <LinkItem to={goBackLink}> Go back </LinkItem>\n      {movie && <MovieCard movie={movie} location={goBackLink} />}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Poster","styled","Wraper","DescriptionWrap","AdditionalWrap","MovieCard","movie","location","poster_path","vote_average","title","overview","namedGenres","genres","map","genr","name","movieRating","Math","floor","src","API","alt","genre","to","state","from","LinkItem","Link","params","useParams","useState","setMovie","goBackLink","useLocation","useEffect","movieId","response","getMovieById"],"sourceRoot":""}